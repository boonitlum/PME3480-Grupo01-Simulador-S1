#-----------------------------------------------------------------------------#
#=============================================================================#
#-----------------------------------------------------------------------------#

# PME-3480 - Motores de Combust√£o Interna
# 1D Otto cycle simulator - 2025
# Example file

#-----------------------------------------------------------------------------#
#=============================================================================#
#-----------------------------------------------------------------------------#

#-----------------------------------------------------------------------------#
# Importing
#-----------------------------------------------------------------------------#
import numpy as np # NumPy is a library for numerical operations with multi-dimensional arrays and matrices, and provides mathematical functions.
import OttoCycle as oc  # Imports the OttoCycle module and assigns it the alias 'oc' for easier reference within the code.

#-----------------------------------------------------------------------------#
#=============================================================================#
#-----------------------------------------------------------------------------#

#-----------------------------------------------------------------------------#
# engine parameters
#-----------------------------------------------------------------------------#

#-----------------------------------------------------------------------------#
# Case
#-----------------------------------------------------------------------------#
case1 = 'motored'
case2 = 'fired'

#-----------------------------------------------------------------------------#
# cylinder
#-----------------------------------------------------------------------------#
B = 85/1000 # Bore - m
S = 90/1000 # Stroke - m
L = 138/1000 # Connecting rod length - m
rv = 13.7 # Compression ratio
n = 3500/60 # Engine speed - rps

#-----------------------------------------------------------------------------#
# Valve intake
#-----------------------------------------------------------------------------#
ThIVO = +360.*(np.pi/180.) # intake valve opening (converted to radians)
ThIVC = -150.*(np.pi/180.) # intake valve closing (converted to radians)

#-----------------------------------------------------------------------------#
# Valve exhaust
#-----------------------------------------------------------------------------#
ThEVO = +150.*(np.pi/180) # exhaust valve opening (converted to radians)
ThEVC = -360.*(np.pi/180) # exhaust valve closing (converted to radians)

#-----------------------------------------------------------------------------#
# Wiebe function
#-----------------------------------------------------------------------------#
ThSOC = -10.*(np.pi/180) # Start of combustion angle (converted to radians)
ThEOC = +10.*(np.pi/180) # End of combustion angle (converted to radians)
aWF = 5. # Wiebe efficiency factor
mWF = 2. # Wiebe form factor (m+1)

#-----------------------------------------------------------------------------#
# boundary parameters
#-----------------------------------------------------------------------------#
pint = 100e3 # pressure - Pa
Tint = 273.15+25 # temperature - K
pexh = 100e3 # pressure - Pa
Texh1 = 273.15+29.2 # temperature - K
Texh2 = 273.15+489.7 # temperature - K
phi = 1.0 # equivalence ratio
fuel = 'CH4'

#-----------------------------------------------------------------------------#
# Simulator parameters:
#-----------------------------------------------------------------------------#
pars1 = (case1, B, S, L, rv, n, ThIVO, ThIVC, ThEVO, ThEVC,
        ThSOC, ThEOC, aWF, mWF, pint, Tint, pexh, Texh1, phi, fuel,)

pars2 = (case2, B, S, L, rv, n, ThIVO, ThIVC, ThEVO, ThEVC,
        ThSOC, ThEOC, aWF, mWF, pint, Tint, pexh, Texh2, phi, fuel,)

#-----------------------------------------------------------------------------#
# Crank Angle
#-----------------------------------------------------------------------------#
Th0 = -360.*(np.pi/180) # cycle start angle (converted to radians)
Th1 = +360.*(np.pi/180) # cycle end angle (converted to radians)
Ths = 1e-1*(np.pi/180) # cycle step angle (converted to radians) OBS.: multiple of ten
Thn = int(((Th1-Th0)/Ths)+1) # number of cycle angle points
Th  = np.linspace(start = Th0, stop = Th1, num = Thn, endpoint = True)

#-----------------------------------------------------------------------------#
# Crank Angle Degree
#-----------------------------------------------------------------------------#
CAD = Th*(180/np.pi)

#-----------------------------------------------------------------------------#
# Otto Cycle
#-----------------------------------------------------------------------------#
V1, m1, T1, p1 = oc.ottoCycle(Th, pars1)
V2, m2, T2, p2 = oc.ottoCycle(Th, pars2)

#-----------------------------------------------------------------------------#
#=============================================================================#
#-----------------------------------------------------------------------------#